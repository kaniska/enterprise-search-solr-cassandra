<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
                 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	 <util:properties id="envProps" location="classpath:META-INF/app.properties"/>
<!--  	
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="root"/>
        <property name="password" value="admin"/>
    </bean>
    
   <bean id="cassandraHostConfigurator" class="me.prettyprint.cassandra.service.CassandraHostConfigurator">

		<constructor-arg value="${cassandra.cluster.url}" />

		<property name="cassandraThriftSocketTimeout" value="${cassandraThriftSocketTimeout}" />

		<property name="maxActive" value="${maxActive}" />

		<property name="maxWaitTimeWhenExhausted" value="${maxWaitTimeWhenExhausted}" />

		<property name="lifo" value="${lifo}" />

		<property name="retryDownedHosts" value="${retryDownedHosts}" />

		<property name="retryDownedHostsDelayInSeconds" value="${retryDownedHostsDelayInSeconds}" />

		<property name="autoDiscoverHosts" value="${autoDiscoverHosts}" />

		<property name="autoDiscoveryDelayInSeconds" value="${autoDiscoveryDelayInSeconds}" />

	</bean>


	<bean id="cluster" class="me.prettyprint.cassandra.service.ThriftCluster">

		<constructor-arg value="${cassandra.cluster.name}" />

		<constructor-arg ref="cassandraHostConfigurator" />

	</bean>


	<bean id="consistencyLevelPolicy" class="me.prettyprint.cassandra.model.ConfigurableConsistencyLevel">

	<property name="defaultReadConsistencyLevel" value="${cassandra.default.read.consistency}" />

	<property name="defaultWriteConsistencyLevel" value="${cassandra.default.write.consistency}" />

    </bean>


	<bean id="keyspace" class="me.prettyprint.hector.api.factory.HFactory" factory-method="createKeyspace">

		<constructor-arg value="${cassandra.keyspece.name}" />

		<constructor-arg ref="cluster" />

		<constructor-arg ref="consistencyLevelPolicy"/>

	</bean>
	
	<context:component-scan  base-package="com.enterprise.app.mediscene.dao.templates"/>  -->
    <context:component-scan  base-package="com.enterprise.app.mediscene.dao.cassandra"/>
    <context:component-scan  base-package="com.enterprise.app.mediscene.dao.solr"/>
	<context:component-scan  base-package="com.enterprise.app.mediscene.dao.core"/> 
	<context:component-scan  base-package="com.enterprise.app.mediscene.service"/>
	
</beans>